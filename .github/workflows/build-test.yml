name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake libz-dev

      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install cmake zlib bash
          echo "$(brew --prefix)/bin" >> $GITHUB_PATH

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          choco install -y cmake
          & "$env:VCPKG_INSTALLATION_ROOT\vcpkg.exe" install zlib

      - name: Configure
        shell: bash
        run: |
          if [ "$RUNNER_OS" = "Windows" ]; then
            cmake -S . -B build -DCMAKE_TOOLCHAIN_FILE="$VCPKG_INSTALLATION_ROOT/scripts/buildsystems/vcpkg.cmake"
          else
            cmake -S . -B build
          fi

      - name: Build
        shell: bash
        run: |
          if [ "$RUNNER_OS" = "Windows" ]; then
            cmake --build build --config Release --parallel
          else
            cmake --build build --parallel
          fi

      - name: Run tests
        shell: bash
        run: |
          cd build
          if [ "$RUNNER_OS" = "Windows" ]; then
            ctest --output-on-failure -C Release
          else
            ctest --output-on-failure
          fi
